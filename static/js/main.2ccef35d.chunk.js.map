{"version":3,"sources":["components/SearchBar/index.js","components/Loading/index.js","api/serpapi.js","components/NewsBox/index.js","pages/News/index.js","pages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","type","maxLength","id","placeholder","onKeyDown","e","keyCode","searchText","value","searchString","onChange","setSearchString","target","onClick","SearchOutlined","children","Loading","height","style","SerpAPI","params","callback","Axios","get","process","encodeURI","headers","then","resp","data","catch","error","response","console","log","status","request","message","config","NewsBox","item","href","link","src","thumbnail","title","source","date","News","state","useState","loading","setLoading","setData","useEffect","getData","length","getNews","news_results","map","i","Home","getResult","inline_videos","knowledge_graph","header_images","image","name","description","organic_results","about_this_result","snippet","related_searches","preventDefault","query","App","page","setPage","setState","val","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ccef35d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nimport './style.css';\r\n\r\nconst SearchBar = (props) => {\r\n    return <header>\r\n            <div className=\"search\">\r\n                  <input  type = \"text\"\r\n                          maxLength = \"100\"\r\n                          id = \"searchText\"\r\n                          placeholder = \"Search Text\"\r\n                          onKeyDown = {e=>{ if(e.keyCode === 13) props.searchText(); }}\r\n                          value={props.searchString}\r\n                          onChange={e=>props.setSearchString(e.target.value)} />\r\n                          \r\n                  <button onClick={() =>{ props.searchText(); }}>\r\n                    <SearchOutlined />\r\n                  </button>\r\n            </div>\r\n                {props.children}\r\n            </header>\r\n    \r\n}\r\n\r\nexport default SearchBar","import React from \"react\";\r\nimport { CircleLoading } from 'react-loadingg';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loading = ({height}) => {\r\n\r\n  return <div \tclassName=\"row\"\r\n\t\t\t\t      style={{height:`${height}px`}}>\r\n              <CircleLoading/>\r\n          </div>;\r\n};\r\n\r\nLoading.propTypes = {\r\n    height: PropTypes.number\r\n  };\r\n\r\nexport default Loading;","import Axios from 'axios';\r\n\r\nexport default class SerpAPI {\r\n\r\n  static async getResult(params,callback) {\r\n    await Axios.get(`https://cors-anywhere.herokuapp.com/${process.env.REACT_APP_API_URL}search.json?engine=google&q=${encodeURI(params)}&api_key=${process.env.REACT_APP_API_KEY}`,{\r\n      headers:{\r\n        'Content-Type':'text/plain'\r\n      }\r\n    })\r\n                .then(resp => {\r\n                  callback(resp.data, false);\r\n                })\r\n                .catch((error) => {\r\n                  if (error.response) {\r\n                      console.log(error.response.data);\r\n                      console.log(error.response.status);\r\n                      console.log(error.response.headers);\r\n                  } else if (error.request) {\r\n                      console.log(error.request);\r\n                  } else {\r\n                      console.log('Error', error.message);\r\n                  }\r\n                  console.log(error.config);\r\n              });\r\n  }\r\n\r\n  static async getNews(params,callback) {\r\n    await Axios.get(`https://cors-anywhere.herokuapp.com/${process.env.REACT_APP_API_URL}search.json?q=${encodeURI(params)}&lr=lang_en&tbm=nws&api_key=${process.env.REACT_APP_API_KEY}`,{\r\n      headers:{\r\n        'Content-Type':'text/plain',\r\n      }\r\n    })\r\n                .then(resp => {\r\n                  callback(resp.data, false);\r\n                })\r\n                .catch((error) => {\r\n                  if (error.response) {\r\n                      console.log(error.response.data);\r\n                      console.log(error.response.status);\r\n                      console.log(error.response.headers);\r\n                  } else if (error.request) {\r\n                      console.log(error.request);\r\n                  } else {\r\n                      console.log('Error', error.message);\r\n                  }\r\n                  console.log(error.config);\r\n              });\r\n  }\r\n  \r\n\r\n}","import React,{useEffect} from \"react\";\r\nimport './style.css'\r\n\r\nconst NewsBox = ({item}) => {\r\n\r\n\r\n    return <a className=\"newsbox\"\r\n                href={item.link}\r\n                target=\"_blank\">\r\n        \r\n            <img \r\n                className=\"img\"\r\n                src={item.thumbnail} />\r\n            <p className=\"title\">\r\n                {item.title}\r\n            </p>\r\n            <div className=\"detail\">\r\n            <span>\r\n                {item.source}\r\n            </span>\r\n            <span>\r\n                {item.date}\r\n            </span>\r\n            </div>\r\n            \r\n\r\n        </a>\r\n    \r\n}\r\n\r\nexport default NewsBox;","import React,{useState,useEffect} from \"react\";\r\nimport Loading from \"../../components/Loading\";\r\nimport SerpAPI from '../../api/serpapi';\r\nimport PropTypes from 'prop-types';\r\nimport NewsBox from \"../../components/NewsBox\";\r\nimport './style.css'\r\n\r\nconst News = ({searchString,state}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [state])\r\n\r\n    const getData = () =>{\r\n        if(!searchString || searchString.length<2)\r\n            return;\r\n        setLoading(true);\r\n        SerpAPI\r\n        .getNews(searchString,\r\n        (resp, error) => {\r\n        if (resp){\r\n            setLoading(false);\r\n            console.log(resp);\r\n            setData(resp);\r\n        } \r\n         \r\n        });\r\n    }\r\n\r\n    return loading ?\r\n            <Loading height={700} />\r\n            :\r\n                data && data.news_results && data.news_results.length>0 ?\r\n                    <div className=\"list\">\r\n                        {data.news_results.map((item,i)=>{\r\n                            return <NewsBox \r\n                                        key={i}\r\n                                        item={item} />\r\n                        })\r\n\r\n                        }\r\n\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        Welcome\r\n                    </div>\r\n    \r\n}\r\nNews.propTypes = {\r\n    searchString: PropTypes.string,\r\n    state:PropTypes.bool\r\n  };\r\n\r\nexport default News;","import React,{useState,useEffect} from \"react\";\r\nimport Loading from \"../../components/Loading\";\r\nimport SerpAPI from '../../api/serpapi';\r\nimport PropTypes from 'prop-types';\r\nimport NewsBox from \"../../components/NewsBox\";\r\nimport './style.css'\r\n\r\nconst Home = ({searchString,state,setSearchString}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [state])\r\n\r\n    const getData = () =>{\r\n        if(!searchString || searchString.length<2)\r\n            return;\r\n        setLoading(true);\r\n        SerpAPI\r\n        .getResult(searchString,\r\n        (resp, error) => {\r\n        if (resp){\r\n            setLoading(false);\r\n            console.log(resp);\r\n            setData(resp);\r\n        } \r\n         \r\n        });\r\n    }\r\n\r\n    return loading ?\r\n            <Loading height={700} />\r\n            :\r\n                data ?\r\n                    <div className=\"row\">\r\n                      <div className=\"upper\">\r\n                      {data.inline_videos &&\r\n                        <div className=\"list\">\r\n                          {data.inline_videos.map((item,i)=>{\r\n                              return <NewsBox \r\n                                        key={i}\r\n                                        item={item} />\r\n                          })\r\n\r\n                          }\r\n                        </div>\r\n                      }\r\n                      {data.knowledge_graph &&\r\n                        <div className=\"desc\">\r\n\r\n                          {data.knowledge_graph.header_images && data.knowledge_graph.header_images.length>0 &&\r\n                            <div className=\"imgBox\">\r\n                              {\r\n                            data.knowledge_graph.header_images.map((item,i)=>{\r\n                              return i<3 &&\r\n                                      <img \r\n                                        key={i}\r\n                                        src={item.image} />\r\n                            })\r\n                            }\r\n                            </div>\r\n                          }\r\n                          <a className=\"descTitle\"\r\n                            href={data.knowledge_graph.source?.link}\r\n                            target=\"_blank\">\r\n                            {data.knowledge_graph.title}\r\n                          </a>\r\n                          <span className=\"descType\">\r\n                            {`( ${data.knowledge_graph.source?.name} - ${data.knowledge_graph.type} )`}\r\n                          </span>\r\n                          <p className=\"description\">\r\n                            {\r\n                              data.knowledge_graph.description\r\n                            }\r\n                          </p>\r\n                        </div>\r\n\r\n                      }\r\n                      </div>\r\n                      {data.organic_results && data.organic_results.length>0 &&\r\n                        <div className=\"results\">\r\n                          {data.organic_results.map((item,i)=>{\r\n                            return <a key={i}\r\n                                      href={item.link}\r\n                                      target=\"_blank\"\r\n                                      className=\"resultItem\">\r\n                                      <p className=\"detailTitle\">\r\n                                        {item.title}\r\n                                      </p>\r\n                                      <p>\r\n                                        {item.about_this_result?.description}\r\n                                      </p>\r\n                                      <p>\r\n                                        {item.snippet}\r\n                                      </p>\r\n                                    </a>\r\n                          })\r\n\r\n                          }\r\n                        </div>\r\n                      }\r\n                       {data.related_searches && data.related_searches.length>0 &&\r\n                        <div className=\"results\">\r\n                          <p className=\"people\">\r\n                            People Also Search\r\n                            </p>\r\n                          {data.related_searches.map((item,i)=>{\r\n                            return <a key={i}\r\n                                      onClick={e=>{e.preventDefault();setSearchString(item.query)}}\r\n                                      target=\"_blank\"\r\n                                      className=\"peopleLink\">\r\n                                        {item.query}\r\n                                    </a>\r\n                          })\r\n\r\n                          }\r\n                        </div>\r\n                      }\r\n                      \r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        Welcome\r\n                    </div>\r\n    \r\n}\r\nHome.propTypes = {\r\n    searchString: PropTypes.string,\r\n    state:PropTypes.bool\r\n  };\r\n\r\nexport default Home;","import React,{useEffect, useState} from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nimport News from \"./pages/News\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  const [searchString, setSearchString] = useState('');\n  const [page, setPage] = useState('Home');\n  const [state, setState] = useState(false);\n\n  useEffect(() => {\n\n  }, [page]);\n\n    const searchText =()=>{\n      if(!searchString){\n        message.error('Search text is required');\n        return;\n      }\n       \n      if(!searchString || searchString.length<2){\n        message.error('Search text  must be at least two characters');\n        return;\n      }\n        \n      setState(!state)\n        \n    }\n\n    const status = () =>{\n      switch (page) {\n        case 'News':\n          return <News \n                    searchString={searchString}\n                    state={state} />\n      \n        default:\n          return <Home\n                    searchString={searchString}\n                    state={state}\n                    setSearchString={(val)=>{setSearchString(val);searchText()}} />\n      }\n    }\n\n    return <div className=\"App\">\n              <h2> Search App</h2>\n              <SearchBar \n                searchString = {searchString}\n                setSearchString = {(val)=>setSearchString(val)}\n                searchText = {searchText}>\n                  <div className=\"selector\">\n                    <a className={\"page\",page===\"Home\"?\"act\":null}\n                      onClick={e=>{e.preventDefault();setPage('Home')}} >\n                      Home\n                    </a>\n                    <a className={\"page\",page===\"News\"?\"act\":null}\n                      onClick={e=>{e.preventDefault();setPage('News')}}>\n                      News\n                    </a>\n                  </div>\n              </SearchBar>\n              {status()}\n            </div>\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}